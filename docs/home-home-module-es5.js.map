{"version":3,"sources":["node_modules/@angular/material/esm2015/form-field.js","node_modules/@angular/material/esm2015/select.js","src/app/home/frequents/frequents.component.html","src/app/home/home.component.html","src/app/home/main/main.component.html","src/app/home/new-features/new-features.component.html","src/app/home/search-bar/search-bar.component.html","src/app/home/shortcuts/shortcuts.component.html","src/app/home/showroom/showroom.component.html","src/app/home/frequents/frequents.component.scss","src/app/home/frequents/frequents.component.ts","src/app/home/home-routing.module.ts","src/app/home/home.component.scss","src/app/home/home.component.ts","src/app/home/home.module.ts","src/app/home/main/main.component.scss","src/app/home/main/main.component.ts","src/app/home/new-features/new-features.component.scss","src/app/home/new-features/new-features.component.ts","src/app/home/search-bar/search-bar.component.scss","src/app/home/search-bar/search-bar.component.ts","src/app/home/shortcuts/shortcuts.component.scss","src/app/home/shortcuts/shortcuts.component.ts","src/app/home/showroom/showroom.component.scss","src/app/home/showroom/showroom.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Input, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, Inject, InjectionToken, NgZone, Optional, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MAT_LABEL_GLOBAL_OPTIONS, mixinColor } from '@angular/material/core';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { startWith, take, takeUntil } from 'rxjs/operators';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id',\n                }\n            },] },\n];\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null',\n                }\n            },] },\n];\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-label'\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-placeholder'\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.decorators = [\n    { type: Directive, args: [{\n                selector: '[matPrefix]',\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.decorators = [\n    { type: Directive, args: [{\n                selector: '[matSuffix]',\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        /* Holds the previous direction emitted by directionality service change emitter.\n             This is used in updateOutlineGap() method to update the width and position of the gap in the\n             outline. Only relevant for the outline appearance. The direction is getting updated in the\n             UI after directionality service change emission. So the outlines gaps are getting\n             updated in updateOutlineGap() method before connectionContainer child direction change\n             in UI. We may get wrong calculations. So we are storing the previous direction to get the\n             correct outline calculations*/\n        this._previousDirection = 'ltr';\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._labelOptions.float || 'auto';\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._labelOptions.float || 'auto';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this hacky workaround in order to support both Ivy\n        // and ViewEngine. We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.updateOutlineGap();\n                this._previousDirection = this._dir.value;\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!(/** @type {?} */ (document.documentElement)).contains(this._elementRef.nativeElement)) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = labelStart - containerStart - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls.item(i).style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls.item(i).style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return this._previousDirection === 'rtl' ? rect.right : rect.left;\n    }\n}\nMatFormField.decorators = [\n    { type: Component, args: [{selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\"><div class=\\\"mat-form-field-flex\\\" #connectionContainer (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\"><ng-container *ngIf=\\\"appearance == 'outline'\\\"><div class=\\\"mat-form-field-outline\\\"><div class=\\\"mat-form-field-outline-start\\\"></div><div class=\\\"mat-form-field-outline-gap\\\"></div><div class=\\\"mat-form-field-outline-end\\\"></div></div><div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\"><div class=\\\"mat-form-field-outline-start\\\"></div><div class=\\\"mat-form-field-outline-gap\\\"></div><div class=\\\"mat-form-field-outline-end\\\"></div></div></ng-container><div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\"><ng-content select=\\\"[matPrefix]\\\"></ng-content></div><div class=\\\"mat-form-field-infix\\\" #inputContainer><ng-content></ng-content><span class=\\\"mat-form-field-label-wrapper\\\"><label class=\\\"mat-form-field-label\\\" (cdkObserveContent)=\\\"updateOutlineGap()\\\" [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\" [id]=\\\"_labelId\\\" [attr.for]=\\\"_control.id\\\" [attr.aria-owns]=\\\"_control.id\\\" [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\" #label *ngIf=\\\"_hasFloatingLabel()\\\" [ngSwitch]=\\\"_hasLabel()\\\"><ng-container *ngSwitchCase=\\\"false\\\"><ng-content select=\\\"mat-placeholder\\\"></ng-content><span>{{_control.placeholder}}</span></ng-container><ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content><span class=\\\"mat-placeholder-required mat-form-field-required-marker\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span></label></span></div><div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\"><ng-content select=\\\"[matSuffix]\\\"></ng-content></div></div><div class=\\\"mat-form-field-underline\\\" #underline *ngIf=\\\"appearance != 'outline'\\\"><span class=\\\"mat-form-field-ripple\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\"></span></div><div class=\\\"mat-form-field-subscript-wrapper\\\" [ngSwitch]=\\\"_getDisplayedMessages()\\\"><div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><ng-content select=\\\"mat-error\\\"></ng-content></div><div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div><ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content><div class=\\\"mat-form-field-hint-spacer\\\"></div><ng-content select=\\\"mat-hint[align='end']\\\"></ng-content></div></div></div>\",\n                // MatInput is a directive and can't have styles, so we need to include its styles here\n                // in form-field-input.css. The MatInput styles are fairly minimal so it shouldn't be a\n                // big deal for people who aren't using MatInput.\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}@media (-ms-high-contrast:active){.mat-form-field-infix{border-image:linear-gradient(transparent,transparent)}}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-empty.mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scaleY(1.0001)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(.5);opacity:0;transition:background-color .3s cubic-bezier(.55,0,.55,.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-label-wrapper .mat-icon,.mat-form-field-subscript-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none} .mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:'';display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em} .mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=month]::after,.mat-input-element[type=time]::after,.mat-input-element[type=week]::after{content:' ';white-space:pre;width:1px}.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button,.mat-input-element::-webkit-inner-spin-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:0 0}@media (-ms-high-contrast:active){.mat-focused select.mat-input-element::-ms-value{color:inherit}}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:'';width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px} .mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px} .mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-start{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start{border-width:2px;transition:border-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity .1s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline{transition:none} .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\"],\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled',\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline', { static: false },] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer', { static: false },] }],\n    _label: [{ type: ViewChild, args: ['label', { static: false },] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: false },] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel, { static: false },] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder, { static: false },] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError,] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint,] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix,] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix,] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatFormFieldModule, MatError, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormField, MatFormFieldControl, getMatFormFieldPlaceholderConflictError, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, MatHint, MatPlaceholder, MatPrefix, MatSuffix, MatLabel, matFormFieldAnimations };\n//# sourceMappingURL=form-field.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, animateChild, query, state, style, transition, trigger } from '@angular/animations';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { A, DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, RIGHT_ARROW, SPACE, UP_ARROW, hasModifierKey } from '@angular/cdk/keycodes';\nimport { CdkConnectedOverlay, Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { Attribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, Directive, ElementRef, EventEmitter, Inject, InjectionToken, Input, isDevMode, NgZone, Optional, Output, Self, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { _countGroupLabelsBeforeOption, _getOptionScrollPosition, ErrorStateMatcher, MAT_OPTION_PARENT_COMPONENT, MatOptgroup, MatOption, mixinDisabled, mixinDisableRipple, mixinErrorState, mixinTabIndex, MatCommonModule, MatOptionModule } from '@angular/material/core';\nimport { MatFormField, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { defer, merge, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, startWith, switchMap, take, takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     * @deprecated Not used anymore. To be removed.\n     * \\@breaking-change 8.0.0\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst transformPanel = matSelectAnimations.transformPanel;\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst fadeInContent = matSelectAnimations.fadeInContent;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-select-trigger'\n            },] },\n];\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?=} _liveAnnouncer\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * \\@breaking-change 8.0.0\n     * @param {?} value\n     * @return {?}\n     */\n    set focused(value) {\n        this._focused = value;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.onChange.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this.typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if ((isOpenKey && !hasModifierKey(event)) || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            // @breaking-change 8.0.0 remove null check for _liveAnnouncer.\n            if (this._liveAnnouncer && selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        }\n        else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this.typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.focus();\n            this.close();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.decorators = [\n    { type: Component, args: [{selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin class=\\\"mat-select-trigger\\\" aria-hidden=\\\"true\\\" (click)=\\\"toggle()\\\" #origin=\\\"cdkOverlayOrigin\\\" #trigger><div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\"><span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\u00A0'}}</span> <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\"><span *ngSwitchDefault>{{triggerValue || '\\u00A0'}}</span><ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content></span></div><div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div></div><ng-template cdk-connected-overlay cdkConnectedOverlayLockPosition cdkConnectedOverlayHasBackdrop cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\" [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\" [cdkConnectedOverlayOrigin]=\\\"origin\\\" [cdkConnectedOverlayOpen]=\\\"panelOpen\\\" [cdkConnectedOverlayPositions]=\\\"_positions\\\" [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\" [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\" (backdropClick)=\\\"close()\\\" (attach)=\\\"_onAttached()\\\" (detach)=\\\"close()\\\"><div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]><div #panel class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\" [ngClass]=\\\"panelClass\\\" [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\" (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\" [style.transformOrigin]=\\\"_transformOrigin\\\" [style.font-size.px]=\\\"_triggerFontSize\\\" (keydown)=\\\"_handleKeydown($event)\\\"><ng-content></ng-content></div></div></ng-template>\",\n                styles: [\".mat-select{display:inline-block;width:100%;outline:0}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform .4s cubic-bezier(.25,.8,.25,1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}@media (-ms-high-contrast:active){.mat-select-panel{outline:solid 1px}}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\"],\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n            },] },\n];\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger', { static: false },] }],\n    panel: [{ type: ViewChild, args: ['panel', { static: false },] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay, { static: false },] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup,] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger, { static: false },] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatSelectModule, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MatSelectChange, MatSelectTrigger, MatSelect, matSelectAnimations, transformPanel, fadeInContent };\n//# sourceMappingURL=select.js.map\n","export default \"<p>frequents works!</p>\\n\"","export default \"<app-main></app-main>\\n<app-search-bar></app-search-bar>\\n<app-showroom></app-showroom>\\n<app-frequents></app-frequents>\\n<app-shortcuts></app-shortcuts>\\n<app-new-features></app-new-features>\\n\"","export default \"<div class=\\\"main-container\\\">\\n\\n</div>\\n\"","export default \"<div class=\\\"new-features-container d-flex flex-row justify-content-around align-items-center\\\">\\n  <div class=\\\"feature-card d-flex flex-row\\\">\\n    <div class=\\\"feature-card-logo\\\">\\n      <img src=\\\"assets/img/chat.png\\\">\\n    </div>\\n    <div class=\\\"divider\\\"></div>\\n    <div class=\\\"feature-card-content d-flex flex-column\\\">\\n      <div class=\\\"feature-card-header\\\">üzenetküldés</div>\\n      <div class=\\\"feature-card-body\\\">Küldj üzenetet azonnal, vegyétek fel a kapcsolatot egymással egy kattintással!\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"feature-card d-flex flex-row\\\">\\n    <div class=\\\"feature-card-logo\\\">\\n      <img src=\\\"assets/img/search.png\\\">\\n    </div>\\n    <div class=\\\"divider\\\"></div>\\n    <div class=\\\"feature-card-content d-flex flex-column\\\">\\n      <div class=\\\"feature-card-header\\\">részletes keresés</div>\\n      <div class=\\\"feature-card-body\\\">Keress lakótársat, szűrj a legapróbb részletre – lakj azzal, akivel te szeretnél!\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"feature-card d-flex flex-row\\\">\\n    <div class=\\\"feature-card-logo\\\">\\n      <img src=\\\"assets/img/video.png\\\">\\n    </div>\\n    <div class=\\\"divider\\\"></div>\\n    <div class=\\\"feature-card-content d-flex flex-column\\\">\\n      <div class=\\\"feature-card-header\\\">Videó feltöltés</div>\\n      <div class=\\\"feature-card-body\\\">Mondd el videóban – ha a kép nem elég, mutasd be magad 1 percben!\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"search-container d-flex justify-content-around align-items-center\\\">\\n  <div class=\\\"input-group d-flex flex-row\\\">\\n    <div class=\\\"input-group-label text-l1 align-self-center\\\">szobát</div>\\n    <div class=\\\"separator align-self-center mx-2\\\"></div>\\n    <div class=\\\"input-group-option text-l2 align-self-center mr-2\\\">keres</div>\\n    <div class=\\\"input-group-option text-l2 selected align-self-center\\\">kínál</div>\\n  </div>\\n\\n\\n  <div class=\\\"input-group d-flex flex-row\\\">\\n    <mat-form-field [floatLabel]=\\\"'never'\\\" class=\\\"place-select\\\">\\n      <mat-select placeholder=\\\"Helyszín\\\" [formControl]=\\\"toppings\\\" multiple>\\n        <mat-select-trigger>\\n          {{toppings.value ? toppings.value[0] : ''}}\\n          <span *ngIf=\\\"toppings.value?.length > 1\\\" class=\\\"example-additional-selection\\\">\\n            (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'további' : 'további'}})\\n          </span>\\n        </mat-select-trigger>\\n        <mat-option *ngFor=\\\"let topping of toppingList\\\" [value]=\\\"topping\\\">{{topping}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"input-group d-flex flex-row\\\">\\n    <div class=\\\"input-group-label text-l1 align-self-center\\\">nem</div>\\n    <div class=\\\"separator align-self-center mx-2\\\"></div>\\n    <div class=\\\"input-group-option text-l2 align-self-center mr-2\\\">fiú</div>\\n    <div class=\\\"input-group-option text-l2 align-self-center mr-2\\\">lány</div>\\n    <div class=\\\"input-group-option text-l2 selected align-self-center\\\">mindegy</div>\\n  </div>\\n\\n  <div class=\\\"input-group d-flex flex-row\\\">\\n    <div class=\\\"input-group-label text-l1 align-self-center mr-2\\\">büdzsé</div>\\n    <input type=\\\"number\\\" class=\\\"input-group-option input-field align-self-center mr-2\\\" placeholder=\\\"min\\\">\\n    <div class=\\\"input-group-label text-l1 align-self-center mr-2\\\">-</div>\\n    <input type=\\\"number\\\" class=\\\"input-group-option input-field align-self-center mr-2\\\" placeholder=\\\"max\\\">\\n\\n    <div class=\\\"input-group-label text-l1 align-self-center mr-1\\\">e Ft</div>\\n  </div>\\n\\n  <button class=\\\"im-orange-bg button-m1\\\">keresés</button>\\n</div>\\n\"","export default \"<div class=\\\"shortcuts-container d-flex justify-content-around align-items-center\\\">\\n  <div class=\\\"shortcut-group d-flex flex-column\\\">\\n    <div class=\\\"img\\\">\\n      <img src=\\\"assets/img/room.png\\\" alt=\\\"\\\">\\n    </div>\\n    <div class=\\\"title\\\">\\n      Keress lakótársat\\n    </div>\\n    <div class=\\\"subtitle\\\">\\n      Keress lakótársat megüresedő szobátokba,vagy akár szobatársat, magad mellé\\n    </div>\\n  </div>\\n\\n  <div class=\\\"shortcut-group d-flex flex-column\\\">\\n    <div class=\\\"img\\\">\\n      <img src=\\\"assets/img/move.png\\\" alt=\\\"\\\">\\n    </div>\\n    <div class=\\\"title\\\">\\n      Keress lakást és költözz\\n    </div>\\n    <div class=\\\"subtitle\\\">\\n      Ha albérletbe mennél, vagy akár váltanál, keress itt olyan lakótársat, akik kiadó szobát hirdetnek – válaszd ki,\\n      kivel laknál – és hol!\\n    </div>\\n  </div>\\n\\n  <div class=\\\"shortcut-group d-flex flex-column\\\">\\n    <div class=\\\"img\\\">\\n      <img src=\\\"assets/img/house.png\\\" alt=\\\"\\\">\\n    </div>\\n    <div class=\\\"title\\\">\\n      Nézzetek együtt lakást\\n    </div>\\n    <div class=\\\"subtitle\\\">\\n      Keress valakit, akivel szívesen laknád, és vegyétek ki együtt!\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"showroom-container\\\">\\n\\n</div>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvZnJlcXVlbnRzL2ZyZXF1ZW50cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-frequents',\n  templateUrl: './frequents.component.html',\n  styleUrls: ['./frequents.component.scss']\n})\nexport class FrequentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [{ path: '', component: HomeComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { HomeComponent } from './home.component';\nimport { MainComponent } from './main/main.component';\nimport { SearchBarComponent } from './search-bar/search-bar.component';\nimport { ShowroomComponent } from './showroom/showroom.component';\nimport { FrequentsComponent } from './frequents/frequents.component';\nimport { ShortcutsComponent } from './shortcuts/shortcuts.component';\nimport { NewFeaturesComponent } from './new-features/new-features.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    MainComponent,\n    SearchBarComponent,\n    ShowroomComponent,\n    FrequentsComponent,\n    ShortcutsComponent,\n    NewFeaturesComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HomeRoutingModule,\n    MatSelectModule\n  ]\n})\nexport class HomeModule { }\n","export default \".main-container {\\n  height: 398px;\\n  background-image: -webkit-gradient(linear, left top, right top, from(#f16e47), to(#fd9e56));\\n  background-image: linear-gradient(to right, #f16e47, #fd9e56);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9tYWluL0M6XFxVc2Vyc1xcT1BDXFxEb2N1bWVudHNcXF93ZWJzaXRlc1xcX19pbW1vYmVlc1xcZnJvbnRlbmQvc3JjXFxhcHBcXGhvbWVcXG1haW5cXG1haW4uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2hvbWUvbWFpbi9tYWluLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLDJGQUFBO0VBQUEsNkRBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvbWFpbi9tYWluLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1haW4tY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAzOThweDtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjZjE2ZTQ3LCAjZmQ5ZTU2KTtcbn1cbiIsIi5tYWluLWNvbnRhaW5lciB7XG4gIGhlaWdodDogMzk4cHg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgI2YxNmU0NywgI2ZkOWU1Nik7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".new-features-container {\\n  height: 189px;\\n  background-image: -webkit-gradient(linear, left top, right top, from(#fb734b), to(#f98f3f));\\n  background-image: linear-gradient(to right, #fb734b, #f98f3f);\\n}\\n\\n.feature-card {\\n  cursor: pointer;\\n  max-width: 330px;\\n  height: 107px;\\n  border-radius: 10px;\\n  box-shadow: 2.3px 3.3px 5px 0 rgba(0, 0, 0, 0.4);\\n  background-color: #ffffff;\\n  padding: 20px;\\n}\\n\\n.feature-card-logo {\\n  max-width: 50px;\\n}\\n\\n.feature-card-logo img {\\n  align-self: center;\\n  margin: 10px 0 0 0;\\n}\\n\\n.divider {\\n  width: 2px;\\n  height: 73px;\\n  background-color: #77b2cb;\\n  margin: 0 1rem 0 1rem;\\n}\\n\\n.feature-card-body {\\n  font-family: Roboto;\\n  font-size: 12px;\\n  font-weight: normal;\\n  font-stretch: normal;\\n  font-style: normal;\\n  line-height: normal;\\n  letter-spacing: 0.48px;\\n  text-align: left;\\n  text-transform: uppercase;\\n  color: #77b2cb;\\n}\\n\\n.feature-card-header {\\n  font-size: 16.5px;\\n  font-weight: 900;\\n  letter-spacing: 0.66px;\\n  color: #fa7d47;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9uZXctZmVhdHVyZXMvQzpcXFVzZXJzXFxPUENcXERvY3VtZW50c1xcX3dlYnNpdGVzXFxfX2ltbW9iZWVzXFxmcm9udGVuZC9zcmNcXGFwcFxcaG9tZVxcbmV3LWZlYXR1cmVzXFxuZXctZmVhdHVyZXMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2hvbWUvbmV3LWZlYXR1cmVzL25ldy1mZWF0dXJlcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSwyRkFBQTtFQUFBLDZEQUFBO0FDQ0Y7O0FERUE7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxnREFBQTtFQUNBLHlCQUFBO0VBQ0EsYUFBQTtBQ0NGOztBREVBO0VBQ0UsZUFBQTtBQ0NGOztBRENFO0VBQ0Usa0JBQUE7RUFDQSxrQkFBQTtBQ0NKOztBREdBO0VBQ0UsVUFBQTtFQUNBLFlBQUE7RUFDQSx5QkFBQTtFQUNBLHFCQUFBO0FDQUY7O0FER0E7RUFDRSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtFQUNBLG9CQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZ0JBQUE7RUFDQSx5QkFBQTtFQUNBLGNBQUE7QUNBRjs7QURHQTtFQUNFLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxzQkFBQTtFQUNBLGNBQUE7QUNBRiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvbmV3LWZlYXR1cmVzL25ldy1mZWF0dXJlcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uZXctZmVhdHVyZXMtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxODlweDtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjZmI3MzRiLCAjZjk4ZjNmKTtcbn1cblxuLmZlYXR1cmUtY2FyZCB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgbWF4LXdpZHRoOiAzMzBweDtcbiAgaGVpZ2h0OiAxMDdweDtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgYm94LXNoYWRvdzogMi4zcHggMy4zcHggNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjQpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBwYWRkaW5nOiAyMHB4O1xufVxuXG4uZmVhdHVyZS1jYXJkLWxvZ28ge1xuICBtYXgtd2lkdGg6IDUwcHg7XG5cbiAgaW1nIHtcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgbWFyZ2luOiAxMHB4IDAgMCAwO1xuICB9XG59XG5cbi5kaXZpZGVyIHtcbiAgd2lkdGg6IDJweDtcbiAgaGVpZ2h0OiA3M3B4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzdiMmNiO1xuICBtYXJnaW46IDAgMXJlbSAwIDFyZW07XG59XG5cbi5mZWF0dXJlLWNhcmQtYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBSb2JvdG87XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHJldGNoOiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuNDhweDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6ICM3N2IyY2I7XG59XG5cbi5mZWF0dXJlLWNhcmQtaGVhZGVyIHtcbiAgZm9udC1zaXplOiAxNi41cHg7XG4gIGZvbnQtd2VpZ2h0OiA5MDA7XG4gIGxldHRlci1zcGFjaW5nOiAwLjY2cHg7XG4gIGNvbG9yOiAjZmE3ZDQ3O1xufVxuIiwiLm5ldy1mZWF0dXJlcy1jb250YWluZXIge1xuICBoZWlnaHQ6IDE4OXB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICNmYjczNGIsICNmOThmM2YpO1xufVxuXG4uZmVhdHVyZS1jYXJkIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBtYXgtd2lkdGg6IDMzMHB4O1xuICBoZWlnaHQ6IDEwN3B4O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBib3gtc2hhZG93OiAyLjNweCAzLjNweCA1cHggMCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIHBhZGRpbmc6IDIwcHg7XG59XG5cbi5mZWF0dXJlLWNhcmQtbG9nbyB7XG4gIG1heC13aWR0aDogNTBweDtcbn1cbi5mZWF0dXJlLWNhcmQtbG9nbyBpbWcge1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gIG1hcmdpbjogMTBweCAwIDAgMDtcbn1cblxuLmRpdmlkZXIge1xuICB3aWR0aDogMnB4O1xuICBoZWlnaHQ6IDczcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICM3N2IyY2I7XG4gIG1hcmdpbjogMCAxcmVtIDAgMXJlbTtcbn1cblxuLmZlYXR1cmUtY2FyZC1ib2R5IHtcbiAgZm9udC1mYW1pbHk6IFJvYm90bztcbiAgZm9udC1zaXplOiAxMnB4O1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xuICBsZXR0ZXItc3BhY2luZzogMC40OHB4O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogIzc3YjJjYjtcbn1cblxuLmZlYXR1cmUtY2FyZC1oZWFkZXIge1xuICBmb250LXNpemU6IDE2LjVweDtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuNjZweDtcbiAgY29sb3I6ICNmYTdkNDc7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-new-features',\n  templateUrl: './new-features.component.html',\n  styleUrls: ['./new-features.component.scss']\n})\nexport class NewFeaturesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".search-container {\\n  height: 71px;\\n  background-color: #f8fcfc;\\n}\\n\\n.input-group {\\n  padding: 0 2px 0 6px;\\n  height: 36px;\\n  width: auto;\\n  border-radius: 17.8px;\\n  border: solid 3px #d7d7d7;\\n}\\n\\n.separator {\\n  width: 2px;\\n  height: 26px;\\n  border-radius: 1px;\\n  background-color: #d7d7d7;\\n}\\n\\n.text-l1 {\\n  text-transform: uppercase;\\n  font-family: Roboto;\\n  font-size: 12px;\\n  font-weight: bold;\\n  font-stretch: normal;\\n  font-style: normal;\\n  line-height: normal;\\n  letter-spacing: 0.48px;\\n  text-align: left;\\n  color: #5a5a5a;\\n}\\n\\n.text-l2 {\\n  text-transform: uppercase;\\n  font-family: Roboto;\\n  font-size: 12px;\\n  font-weight: 300;\\n  font-stretch: normal;\\n  font-style: normal;\\n  line-height: normal;\\n  letter-spacing: 0.48px;\\n  text-align: center;\\n  color: #5a5a5a;\\n}\\n\\n.selected {\\n  padding: 6px 0.5rem 0 0.5rem;\\n  text-transform: uppercase;\\n  height: 26px;\\n  border-radius: 13px;\\n  background-color: #f47c4c;\\n  font-family: Roboto;\\n  font-size: 12px;\\n  font-weight: 900;\\n  font-stretch: normal;\\n  font-style: normal;\\n  line-height: normal;\\n  letter-spacing: 0.48px;\\n  text-align: center;\\n  color: #ffffff;\\n}\\n\\n.button-m1 {\\n  width: 90px;\\n  height: 24px;\\n  border-radius: 12px;\\n  background-color: #f47c4c;\\n  border: none;\\n  font-family: Roboto;\\n  text-transform: uppercase;\\n  font-size: 12px;\\n  font-weight: 900;\\n  font-stretch: normal;\\n  font-style: normal;\\n  line-height: normal;\\n  letter-spacing: 0.48px;\\n  text-align: center;\\n  color: #f8fcfc;\\n}\\n\\n.button-m1:focus {\\n  outline: none;\\n}\\n\\n.input-field {\\n  padding: 0 0.5rem 0 0.5rem;\\n  width: 65px;\\n  height: 26px;\\n  border-radius: 8px;\\n  border: solid 2px #d7d7d7;\\n}\\n\\n.example-additional-selection {\\n  opacity: 0.75;\\n  font-size: 0.75em;\\n}\\n\\n.place-select {\\n  top: -13px;\\n}\\n\\n::ng-deep.mat-form-field-underline {\\n  display: none;\\n}\\n\\n::ng-deep.mat-primary .mat-pseudo-checkbox-checked {\\n  background: #f47c4c;\\n}\\n\\n::ng-deep.mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\\n  color: #5a5a5a;\\n  font-family: Roboto;\\n  font-size: 12px;\\n  font-weight: 900;\\n  font-stretch: normal;\\n  font-style: normal;\\n  line-height: normal;\\n  letter-spacing: 0.48px;\\n}\\n\\n::ng-deep.mat-select-panel .mat-option {\\n  line-height: 3em;\\n  height: 3em;\\n  color: #5a5a5a;\\n  font-family: Roboto;\\n  font-size: 12px !important;\\n  font-weight: normal;\\n  font-stretch: normal;\\n  font-style: normal;\\n  line-height: normal;\\n  letter-spacing: 0.48px;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { MatSelectModule } from '@angular/material/select';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.scss']\n})\nexport class SearchBarComponent implements OnInit {\n  toppings = new FormControl();\n\n  toppingList: string[] = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".shortcuts-container {\\n  height: 350px;\\n}\\n\\n.shortcut-group {\\n  cursor: pointer;\\n  max-width: 330px;\\n}\\n\\n.img img {\\n  max-width: 330px;\\n}\\n\\n.title {\\n  font-family: Roboto;\\n  font-size: 22px;\\n  font-weight: 900;\\n  font-stretch: normal;\\n  font-style: normal;\\n  line-height: normal;\\n  letter-spacing: 0.88px;\\n  text-align: center;\\n  color: #fb744b;\\n}\\n\\n.subtitle {\\n  font-family: Roboto;\\n  font-size: 14px;\\n  font-weight: normal;\\n  font-stretch: normal;\\n  font-style: normal;\\n  line-height: normal;\\n  letter-spacing: 0.56px;\\n  text-align: center;\\n  color: #77b2cb;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9zaG9ydGN1dHMvQzpcXFVzZXJzXFxPUENcXERvY3VtZW50c1xcX3dlYnNpdGVzXFxfX2ltbW9iZWVzXFxmcm9udGVuZC9zcmNcXGFwcFxcaG9tZVxcc2hvcnRjdXRzXFxzaG9ydGN1dHMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2hvbWUvc2hvcnRjdXRzL3Nob3J0Y3V0cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7QUNDRjs7QURFQTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtBQ0NGOztBREVBO0VBQ0UsZ0JBQUE7QUNDRjs7QURFQTtFQUNFLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0Esb0JBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7QUNDRjs7QURFQTtFQUNFLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLG1CQUFBO0VBQ0Esb0JBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvc2hvcnRjdXRzL3Nob3J0Y3V0cy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaG9ydGN1dHMtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAzNTBweDtcbn1cblxuLnNob3J0Y3V0LWdyb3VwIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBtYXgtd2lkdGg6IDMzMHB4O1xufVxuXG4uaW1nIGltZyB7XG4gIG1heC13aWR0aDogMzMwcHg7XG59XG5cbi50aXRsZSB7XG4gIGZvbnQtZmFtaWx5OiBSb2JvdG87XG4gIGZvbnQtc2l6ZTogMjJweDtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgZm9udC1zdHJldGNoOiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuODhweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogI2ZiNzQ0Yjtcbn1cblxuLnN1YnRpdGxlIHtcbiAgZm9udC1mYW1pbHk6IFJvYm90bztcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xuICBsZXR0ZXItc3BhY2luZzogMC41NnB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjNzdiMmNiO1xufVxuIiwiLnNob3J0Y3V0cy1jb250YWluZXIge1xuICBoZWlnaHQ6IDM1MHB4O1xufVxuXG4uc2hvcnRjdXQtZ3JvdXAge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIG1heC13aWR0aDogMzMwcHg7XG59XG5cbi5pbWcgaW1nIHtcbiAgbWF4LXdpZHRoOiAzMzBweDtcbn1cblxuLnRpdGxlIHtcbiAgZm9udC1mYW1pbHk6IFJvYm90bztcbiAgZm9udC1zaXplOiAyMnB4O1xuICBmb250LXdlaWdodDogOTAwO1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xuICBsZXR0ZXItc3BhY2luZzogMC44OHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjZmI3NDRiO1xufVxuXG4uc3VidGl0bGUge1xuICBmb250LWZhbWlseTogUm9ib3RvO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG4gIGxldHRlci1zcGFjaW5nOiAwLjU2cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICM3N2IyY2I7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shortcuts',\n  templateUrl: './shortcuts.component.html',\n  styleUrls: ['./shortcuts.component.scss']\n})\nexport class ShortcutsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".showroom-container {\\n  box-shadow: 0 25px 25px -25px rgba(0, 0, 0, 0.53) inset;\\n  height: 536px;\\n  background-image: -webkit-gradient(linear, left top, right top, from(#95c7d7), color-stop(#8aadb4), color-stop(#938ec5), color-stop(#87b0d9), to(#95c7d7));\\n  background-image: linear-gradient(to right, #95c7d7, #8aadb4, #938ec5, #87b0d9, #95c7d7);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9zaG93cm9vbS9DOlxcVXNlcnNcXE9QQ1xcRG9jdW1lbnRzXFxfd2Vic2l0ZXNcXF9faW1tb2JlZXNcXGZyb250ZW5kL3NyY1xcYXBwXFxob21lXFxzaG93cm9vbVxcc2hvd3Jvb20uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2hvbWUvc2hvd3Jvb20vc2hvd3Jvb20uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFHRSx1REFBQTtFQUNBLGFBQUE7RUFDQSwwSkFBQTtFQUFBLHdGQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9ob21lL3Nob3dyb29tL3Nob3dyb29tLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNob3dyb29tLWNvbnRhaW5lciB7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogMCAyNXB4IDI1cHggLTI1cHggcmdiYSgwLCAwLCAwLCAwLjUzKSBpbnNldDtcbiAgLW1vei1ib3gtc2hhZG93OiAwIDI1cHggMjVweCAtMjVweCByZ2JhKDAsIDAsIDAsIDAuNTMpIGluc2V0O1xuICBib3gtc2hhZG93OiAwIDI1cHggMjVweCAtMjVweCByZ2JhKDAsIDAsIDAsIDAuNTMpIGluc2V0O1xuICBoZWlnaHQ6IDUzNnB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICM5NWM3ZDcsICM4YWFkYjQsICM5MzhlYzUsICM4N2IwZDksICM5NWM3ZDcpO1xufVxuIiwiLnNob3dyb29tLWNvbnRhaW5lciB7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogMCAyNXB4IDI1cHggLTI1cHggcmdiYSgwLCAwLCAwLCAwLjUzKSBpbnNldDtcbiAgLW1vei1ib3gtc2hhZG93OiAwIDI1cHggMjVweCAtMjVweCByZ2JhKDAsIDAsIDAsIDAuNTMpIGluc2V0O1xuICBib3gtc2hhZG93OiAwIDI1cHggMjVweCAtMjVweCByZ2JhKDAsIDAsIDAsIDAuNTMpIGluc2V0O1xuICBoZWlnaHQ6IDUzNnB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICM5NWM3ZDcsICM4YWFkYjQsICM5MzhlYzUsICM4N2IwZDksICM5NWM3ZDcpO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-showroom',\n  templateUrl: './showroom.component.html',\n  styleUrls: ['./showroom.component.scss']\n})\nexport class ShowroomComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"home-home-module-es5.js"}